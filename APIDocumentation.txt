API DOCUMENTATION (6/4/19):
  -by Martin Connor
  -for Michelle Huang's Bookings Module (Air BnB);
  â€”Martin's fork of Michelle's Repo: 
  
  https://github.com/rd-b-ms/bookings-module
  
  -Postman Collection with Working Requests for all 7 Routes: 
  
  https://www.getpostman.com/collections/a83e7558c1aeacc19845

***************************************************************

/GET (for 'listings' database)

  ENDPOINT: 

    '/booking/?listingid=${id}/'

  EXAMPLE ENCODED URL:

    '/booking/?listingid=${id}/'

  EXAMPLE RESPONSE:

    [
      {
        "listing_id": 1,
        "price": 716,
        "num_reviews": 164,
        "avg_rating_pct": 34,
        "service_fee_pct": 106,
        "min_nights": 17,
        "max_guests": 6,
        "createdAt": "2019-06-04T16:50:07.000Z",
        "updatedAt": "2019-06-04T16:50:07.000Z"
      },
    ]

***************************************************************

/POST (for 'availabilities' database)

  ENDPOINT: 

    '/bookings/availabilities'

  REQUEST BODY 'SCHEMA':

    {
      "listingId": INTEGER, ***AUTO-GENERATED PRIMARY KEY,
      "fromDate": DATE & TIME (YYYY-MM-DD HH:MM:SS),
      "toDate": DATE & TIME (YYYY-MM-DD HH:MM:SS),
      "numGuests": INTEGER,
      "numInfants": INTEGER,
    }

  EXAMPLE REQUEST:

    {
      "listingId": "14",
      "fromDate": "2019-12-28 09:45:23",
      "toDate": "2019-11-06 09:45:23",
      "numGuests": "1",
      "numInfants": "0"
    }

  EXAMPLE RESPONSE:

    {
      "id": 6,
      "listing_id": "14",
      "from_date": "2019-12-28T17:45:23.000Z",
      "to_date": "2019-11-06T17:45:23.000Z",
      "num_guests": "1",
      "num_infants": "0",
      "updatedAt": "2019-06-04T16:51:37.126Z",
      "createdAt": "2019-06-04T16:51:37.126Z"
    }

***************************************************************

/POST (for 'listings' database)

  ENDPOINT: 
    '/bookings/listings'

  REQUEST BODY 'SCHEMA':

    {
      "listingId": INTEGER,
      "price": INTEGER,
      "numReviews": INTEGER,
      "avgRatingPct": INTEGER,
      "serviceFeePct": INTEGER,
      "minNights": INTEGER,
      "maxGuests": INTEGER
    }

  EXAMPLE REQUEST:
    
    {
      "listingId": "108",
      "price": "820",
      "numReviews": "33",
      "avgRatingPct": "33",
      "serviceFeePct": "333",
      "minNights": "3",
      "maxGuests": "3"
    }

  EXAMPLE RESPONSE:

   <IF SUCCESSFUL (SENDS BACK ORIGINAL REQUEST:)>

    {
      "listing_id": "108",
      "price": "820",
      "num_reviews": "33",
      "avg_rating_pct": "33",
      "service_fee_pct": "333",
      "min_nights": "3",
      "max_guests": "3",
      "updatedAt": "2019-06-04T16:50:53.222Z",
      "createdAt": "2019-06-04T16:50:53.222Z"
    }

***************************************************************    

/DELETE (for 'availabilities' database)

  ENDPOINT: 
    
    '/bookings/availabilities'

  REQUEST BODY 'SCHEMA':

    {
      "listingId": <INTEGER OF AVAILIBILITIES ID TO BE DELETED>;
    }

  EXAMPLE REQUEST:

    {
      "listingId": "12"
    }

  EXAMPLE RESPONSE:

    <IF THE RECORD DELETION IS SUCCESSFUL>:

      1
    
    <IF THE RECORD DELETION IS A FAILURE>:
    
      0

***************************************************************

/DELETE (for 'listings' database):

  ENDPOINT: 
    '/bookings/listings'

  REQUEST BODY 'SCHEMA':

    {
     "listingId": <INTEGER OF AVAILIBILITIES ID TO BE DELETED>;
    }

  EXAMPLE REQUEST:

    {
      "listingId": "92"
    }

  EXAMPLE RESPONSE:

    <IF THE RECORD DELETION IS SUCCESSFUL>:

      1
    
    <IF THE RECORD DELETION IS A FAILURE>:
    
      0

***************************************************************

/PUT (for 'availabilities' database);

  ENDPOINT: 
    '/bookings/availabilities'

  REQUEST BODY 'SCHEMA':

    {
      "listingId": <INTEGER-OF-LISTING-ID-TO-BE-UPDATED>,
      <RECORD PROPERTY TO BE UPDATED>: <NEW VALUE OF UPDATED INFO>
    }

  EXAMPLE REQUEST:

    {
      "listingId": "46",
      "numGuests": "6"
    }

  EXAMPLE RESPONSE:

    <IF THE RECORD UPDATE IS SUCCESSFUL>:

      [ null, 1 ]
    
    <IF THE RECORD UPDATE IS A FAILURE>:
    
      [ null, 0 ]

***************************************************************

/PUT (for 'listings' database)

  ENDPOINT: 

    '/bookings/listings'

  REQUEST BODY 'SCHEMA':

    {
      "listingId": <INTEGER-OF-LISTING-ID-TO-BE-UPDATED>,
      <RECORD PROPERTY TO BE UPDATED>: <NEW VALUE OF UPDATED INFO>
    }

  EXAMPLE REQUEST:

    {
      "listingId": "99",
      "maxGuests": "4"
    }

  EXAMPLE RESPONSE:

    <IF THE RECORD UPDATE IS SUCCESSFUL>:

      [ null, 1 ]
    
    <IF THE RECORD UPDATE IS A FAILURE>:
    
      [ null, 0 ]

***************************************************************

HOUSEKEEPING:
1.) Delete serviceFeePct and minNights, because Michelle never used them.